**** 요청 방식 ****
1. get
    - 하이퍼링크 요청 방식, url 요청 방식
    - 기본 요청 방식
    - 간단한 데이터만 전송 (패킷의 header 부분에 데이터를 담아 전송)
    - 데이터 노출 (주소에 그대로)
    - 조회 요청시 사용
    
2. post
    - 폼 전송(=요청) 방식
    - 많은 양의 데이터 전송 (패킷의 body 부분에 데이터를 따로 보관해 전송)
    - 데이터 전송 시 노출되지 않음
    - 데이터 변경이나 등록 요청시

**** call/get 방식 실습 순서: getapp ****
- (base) C:\njikim\Django\myproj1>python manage.py startapp getapp
- myproj1 -> settings.py INSTALLED_APPS에 getapp 추가

- getapp -> templates 생성

- myproj1 -> urls.py
    path('getapp/')

- getapp -> views.py
    mainFunc()

- getapp -> templates -> index.html 작성
    데이터 전송 by href="callget?name=eunjikim&age=20" & using form tag

- myproj1 -> urls.py
    from getapp import views
    path('getapp/', views.mainFunc)     # 메인 url에서 바로 처리    

# note: 
- 그전에는 include로 접속 경로를 지정. 지금은 views에 있는 함수 바로 불러옴
- 메인에서 views로 직접 처리하는 건 하나만 할 수 있음
- http://127.0.0.1:8000/getapp/ 이런식으로 직접 url을 쳐서 요청하는 방식이 바로 get 방식
- http://127.0.0.1:8000/getapp?age=30    # get 방식으로 데이터도 같이 전송하는 예시

* callget.html: getapp에서 href 클릭 했을 때 이동할 html *
- getapp -> views.py
    from django.views.generic.base import TemplateView
    class callView(TemplateView)

 - myproj1 -> urls.py
    from getapp.views import CallView
    path('getapp/callget/', CallView.as_view())

* insert.html: callget.html에서 href 클릭 했을 때 이동할 html *
- myproj1 -> urls.py
    path('getapp/', include('getapp.urls'))
    
- getapp -> views.py    
    def insertFunc()

- getapp -> urls.py 생성
    from django.urls import path
    from getapp import views

    path('insert', views.insertFunc) 

############################# 04-16-tuesday #############################

getapp -> templates -> insert.html
- note: post 방식은 반드시 form으로 묶어서        
    <form action="insert" method="post">

- settings.py에서 MIDDLEWARE의  #'django.middleware.csrf.CsrfViewMiddleware', 주석처리

- getapp -> views.py
# get 방식일 떼 insert.html, post 방식일 때 list.html, 
def insertFunc(request):
    if request.method == 'GET':
        print('get 요청 처리')
        return render (request, "insert.html")
    else:
        return render(request, "list.html")

* list.html: post 요청 처리 페이지 *
- getapp -> templates -> list.html 생성


- getapp -> views.py
def insertFunc(request):
    if request.method == 'GET':
        print('get 요청 처리')
        return render (request, "insert.html")
    else:
        name = request.POST.get("name")
        return render(request, "list.html", {"name": name})

- getapp -> templates -> list.html
결과: {{name}} 추가


