**** session 처리 실습 예제: sessionapp ****
1. sessionapp 생성, settings.py에 추가

2. sessionapp -> views.py
    def main(request):
        return render(request, 'main.html')

3. sessionapp -> templates 폴더 -> main.html 작성
    <body>
        <h1> 메인 페이지 </h1>
        <a href="">운영체제 고르기</a>
    </body>
 
4. myproj1 -> urls.py
    path('sessionapp/', include('sessionapp.urls')),

5. sessionapp -> urls.py 생성
    from django.urls import path
    from sessionapp import views

    urlpatterns = [
        path("", views.main),
    ]

6. sessionapp -> views.py
    def setOS(request):
        return render(request, 'setOS.html')

7. sessionapp -> templates -> setOS.html 작성
    <body>
        <h1> 세션이해하기 </h1>
        <p> 운영체제 선택 </p>
        <a href="">Window</a><br>
        <a href="">Mac os</a><br>
        <a href="">Linux</a><br>
    </body>
8. sessionapp -> templates -> main.html
    <a href="setOS">

9. sessionapp -> urls.py    
    path("setOS", views.setOS),

10. sessionapp -> templates -> showOS.html
    <h2> 결과보기 (5초 후에 새로고침하면 os 선택 해제 됨) </h2>

11. sessionapp -> templates -> setOS.html
    <a href="showOS">Window</a><br>
    <a href="showOS">Mac os</a><br>
    <a href="showOS">Linux</a><br>

12. sessionapp -> urls.py
    path("showOS", views.showOS),

13. sessionapp -> views.py
    def showOS(request):
        return render(request, 'showOS.html')

14. sessionapp -> templates -> setOS.html
    <a href="showOS?favorite_os=window">Window</a><br>
    <a href="showOS?favorite_os=mac">Mac os</a><br>
    <a href="showOS?favorite_os=linux">Linux</a><br>

15. sessionapp -> views.py
    def showOS(request):
        os = request.GET.get("favorite_os")   
        return render(request, 'showOS.html', {"os":os})

16. sessionapp -> templates -> showOS.html
    선택한 OS는 {{os}} 입니다.

17. sessionapp -> templates -> setOS.html
<!-- setOS로 변경하기 -->
    <a href="setOS?favorite_os=window">Window</a><br>
    <a href="setOS?favorite_os=mac">Mac os</a><br>
    <a href="setOS?favorite_os=linux">Linux</a><br>

18. sessionapp -> views.py
    from django.http.response import HttpResponseRedirect

def setOS(request): # favorite_os의 값 유무에 따라 return값을 다르게
    if "favorite_os" in request.GET:
        os = request.GET.get("favorite_os") 
        request.session['f_os'] = os        # 세션 생성 (값을 오래 저장 가능)
        return HttpResponseRedirect("showOS")   # setOS 요청값 처리
    else:
        return render(request, 'setOS.html')    # main 요청값 처리

def showOS(request):    
    if "f_os" in request.session:
        request.session.set_expiry(3)
        return render(request, 'showOS.html', {"os":request.session["f_os"]})
    else:
        return render(request, "showOS.html", {"os": "선택한 os가 없습니다."})


