
# python manage.py runserver 0.0.0.0:8000
myproj1 -> myproj1 -> settings.py
    ALLOWED_HOSTS = [*]     #모든 ip를 허용

**** Django application 생성: myapp ****
0. 프로젝트 생성
(base) C:\njikim\Django django-admin startproject myproj1
(venv) C:\njikim\Django>cd myproj1
(venv) C:\njikim\Django\myproj1>python manage.py makemigrations
(venv) C:\njikim\Django\myproj1>python manage.py migrate
(venv) C:\njikim\Django\myproj1>python manage.py runserver

1. app 생성
(base) C:\njikim\Django\myproj1>python manage.py startapp myapp
myproj1 -> settings.py
    INSTALLED_APPS에 myapp 추가

2. views 클라이언트의 요청 처리
# 사용자가 접속 시 (요청 시) 함수 호출됨
myproj1 -> myapp -> views.py
    from django.http.response import HttpResponse
    def index()     

3. 메인 urls.py 
# 사용자가 '처음' 접속하면 views에서 index라는 함수가 실행 되게 경로를 설정
myproj1 -> urls.py
    from django.urls.conf import include
    from myapp import views
    
    path('myapp/', include('myapp.urls'))   # myapp.urls로 toss

4. myapp urls.py
myapp -> urls.py 생성
    from django.urls import path
    from myapp import views

    urlpatterns = [
        path('', views.index, name='index'), # views.index를 실행해라
    ]

5. templates
# 앱 마다 따로 만들어야 함
myapp -> templates 폴더 생성 (장고 default명 임)
    hello.html 작성

myapp -> views.py
    def hello_template()

myapp -> urls.py
    path('hello_tem', views.hello_template)

6. static 
# image 출력
myapp -> static 폴더 생성
    images -> 이미지 추가

myapp -> templates
    my.html 작성

myapp -> views.py
    def hello_images

myapp -> urls.py
    path('img', views.hello_images)

**** 요청 방식 ****
1. get
    - 하이퍼링크 요청 방식, url 요청 방식
    - 기본 요청 방식
    - 간단한 데이터만 전송 (패킷의 header 부분에 데이터를 담아 전송)
    - 데이터 노출 (주소에 그대로)
    - 조회 요청시 사용
    
2. post
    - 폼 전송(=요청) 방식
    - 많은 양의 데이터 전송 (패킷의 body 부분에 데이터를 따로 보관해 전송)
    - 데이터 전송 시 노출되지 않음
    - 데이터 변경이나 등록 요청시

**** get 방식 실습 순서: getapp ****
- (base) C:\njikim\Django\myproj1>python manage.py startapp getapp
- myproj1 -> settings.py INSTALLED_APPS에 getapp 추가

- getapp -> templates 생성

- myproj1 -> urls.py
    path('getapp/')

- getapp -> views.py
    mainFunc()

- getapp -> templates -> index.html 작성
    데이터 전송 by href="callget?name=eunjikim&age=20" & using form tag

- myproj1 -> urls.py
    from getapp import views
    path('getapp/', views.mainFunc)     # 메인 url에서 바로 처리    

# note: 
- 그전에는 include로 접속 경로를 지정. 지금은 views에 있는 함수 바로 불러옴
- 메인에서 views로 직접 처리하는 건 하나만 할 수 있음
- http://127.0.0.1:8000/getapp/ 이런식으로 직접 url을 쳐서 요청하는 방식이 바로 get 방식
- http://127.0.0.1:8000/getapp?age=30    # get 방식으로 데이터도 같이 전송하는 예시

* callget.html: getapp에서 href 클릭 했을 때 이동할 html *
- getapp -> views.py
    from django.views.generic.base import TemplateView
    class callView(TemplateView)

 - myproj1 -> urls.py
    from getapp.views import CallView
    path('getapp/callget/', CallView.as_view())

* insert.html: callget.html에서 href 클릭 했을 때 이동할 html *
- myproj1 -> urls.py
    path('getapp/', include('getapp.urls'))
    
- getapp -> views.py    
    def insertFunc()

- getapp -> urls.py 생성
    from django.urls import path
    from getapp import views

    path('insert', views.insertFunc) 
