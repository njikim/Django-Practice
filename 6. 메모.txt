***********04-18-수요일**********

****** CRUD 기능의 메모앱 ******
0. 앱 생성 (memoapp)
    (base) C:\njikim\Django\myproj2>python manage.py startapp memoapp
    settings.py에 memoapp 추가

# note: bookmarkapp의 home.html에 북마크, 메모, 설문 앱 모두 추가할거임
1. bookmarkapp -> templates -> home.html
    <h1> 한줄 메모 앱 </h1>
    <a href ="memolist"> 바로가기 </a>

2. memoapp -> templates -> list.html
    <h2> 한줄 메모장 </h2>
    개의 메모가 있습니다. <br>
    <form>
        이름: <input type="text" name="writer"/>
        메모: <input type="text" name="memo" />
        <input type="submit" value="OK">
    </form>
    <hr>
    <table border="1">
        <tr>
            <th>number</th><th>name</th><th>memo</th><th>date</th>
        </tr>
    </table>

3. memoapp -> views.py
    def home(request):
        return render(request, 'list.html')

4. myproj2 -> urls.py
    path('memolist/', include('memoapp.urls')),

5. memoapp -> urls.py 추가
    from django.urls import path
    from memoapp import views

    urlpatterns = [
        path('', views.home),
    ]

6. memoapp -> models.py
    from datetime import datetime

    class Memo(models.Model):
        idx = models.AutoField(primary_key=True)    # AutoField: 자동증가 메서드
        writer = models.CharField(null=False, max_length=50)
        memo = models.TextField(null=False)
        post_date = models.DateTimeField(default=datetime.now, blank=True)

7. migrations
    C:\njikim\Django\myproj2>python manage.py makemigrations    # 추가한 목록 나옴
    Migrations for 'memoapp':
    memoapp\migrations\0001_initial.py
        - Create model Memo

    C:\njikim\Django\myproj2>python manage.py migrate       # 테이블 생성

8. memoapp -> admin.py
    from memoapp.models import Memo
    admin.site.register(Memo)

9. memoapp -> views.py
    from memoapp.models import Memo

    def home(request):
        memoList = Memo.objects.order_by("-idx")       #내림차순 정렬, 최신글이 맨 위로
        memoCount = Memo.objects.all().count()
        return render(request, 'list.html', {"memoList": memoList, "memoCount": memoCount})

10. memoapp -> templates -> list.html
    <h2> 한줄 메모장 </h2>
    {{memoCount}} 개의 메모가 있습니다. <br>
    <form action="memoinsert" method="POST">
        이름: <input type="text" name="writer"/>
        메모: <input type="text" name="memo" />
        <input type="submit" value="OK">
    </form>
    <hr>
    <table border="1">
        <tr>
            <th>number</th><th>name</th><th>memo</th><th>date</th>
            {% for row in memoList %}
            <tr>
                <td>{{row.idx}}</td>
                <td>{{row.writer}}</td>
                <td>{{row.memo}}</td>
                <td>{{row.post_date}}</td>
            </tr>
            {% endfor %}
        </tr>
    </table>

11. memoapp -> urls.py
    path('memoinsert', views.insert),

## 추가
12. memoapp -> views.py
from django.views.decorators.csrf import csrf_exempt

@csrf_exempt    #POST 방식 사용 시
def insert(request):
    writer = request.POST["writer"]
    memo = request.POST["memo"]
    print(writer, ',', memo)
    # 테이블에 데이터 저장
    Memo(writer=writer, memo=memo).save()
    # 리스트 페이지로 복귀
    #return render(request, 'list.html')     
    return redirect("/memolist")          # home 함수가 호출 돼야 데이터가 저장됨

## 수정 & 삭제
테이블에서 이름을 클릭했을 때 memodetail.html이 보여지게
13. memoapp -> templates -> memodetail.html
    <h2> 메모 편집 </h2>
    <form>
        <table border="1">
            <tr>
                <td>name</td>
                <td><input type="text" name="writer" /></td>
            </tr>
            <tr>
                <td>memo</td>
                <td><input type="text" name="memo" /></td>
            </tr>
            <tr>
                <td>date</td>
            </tr>
        </table>
    </form>

## 테이블에서 이름을 클릭했을 때 detail.html이 보여지게 링크추가
14. memoapp -> templates -> list.html
    <td><a href="memodetail">{{row.writer}}</a></td>

15. memoapp -> urls.py
    path('memodetail', views.detail),

16. memoapp -> views.py
    def detail(request):
        return render(request, 'memodetail.html')

17. memoapp -> templates -> list.html
    <td><a href="memodetail?idx={{row.idx}}">{{row.writer}}</a></td>

## 이름을 누르면 해당하는 데이터값이 나옴
18. memoapp -> views.py
    def detail(request):
        idx = request.GET["idx"]
        dto = Memo.objects.get(idx=idx)
        print(dto)
        return render(request, 'memodetail.html', {"dto": dto})

19. memoapp -> templates -> memodetail.html
    <tr>
        <td>name</td>
        <td><input type="text" name="writer" value="{{dto.writer}}"/></td>
    </tr>
    <tr>
        <td>memo</td>
        <td><input type="text" name="memo" value="{{dto.memo}}"/></td>
    </tr>
    <tr>
        <td>date</td>
        <td>{{dto.post_date}}</td>
    </tr>

    <!-- 삭제기능 -->
    <tr>
        <td colspan="2" align="center">
            <input type="button" value="수정" /> &nbsp;&nbsp; 
            <a href="memodel?idx={{dto.idx}}">삭제</a> 
        </td>
    </tr>

20. memoapp -> urls.py
    path('memodel', views.delete),

21. memoapp -> views.py
    def delete(request):
        idx = request.GET["idx"]
        Memo.objects.get(idx=idx).delete()
        return redirect("/memolist")                    # 삭제 후, home함수 호출되야함.

## 수정기능
22. memoapp -> templates -> memodetail.html
    <head>
        <script>
            function fnUpdate(){
                document.f1.action="memoupdate";
                document.f1.submit();
            }
        </script>
    </head>

    <form name="f1" method="POST">

    <tr>
        <td colspan="2" align="center">
            <input type="button" value="수정" onclick="fnUpdate()" /> &nbsp;&nbsp; 
            <a href="memodel?idx={{dto.idx}}">삭제</a> 
        </td>
    </tr>

23. memoapp ->urls.py
    path('memoupdate', views.update),

24. memoapp -> views.py
    @csrf_exempt
    def update(request):
        # update table명 set writer=writer, memo=memo where idx=idx
        writer = request.POST["writer"]
        memo = request.POST["memo"]
        idx = request.POST["idx"]
        print(idx)
        return redirect("/memolist")

25. memoapp -> templates -> memodetail.html
    <form name="f1" method="POST">
        <!-- idx 값을 서버에 안보이게 전달할 때 -->
        <input type="hidden" name="idx" value="{{dto.idx}}" />    